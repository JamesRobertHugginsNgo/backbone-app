{"version":3,"sources":["scripts/backbone-odata4.min.js"],"names":["_typeof","Symbol","iterator","obj","constructor","prototype","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","window","BackboneOData4","Model","Backbone","extend","attributeTypes","set","attrs","opts","k","arguments","this","hasOwnProperty","Boolean","valueOf","Number","String","Function","bind","apply","concat","call","toJSON","undefined","json","deep","Collection","Date","toISOString","toString","model","queryOptions","initialize","mods","fetch","data","$","$count","parse","resp","value","View"],"mappings":"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","file":"backbone-odata4.min.js","sourcesContent":["'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n/* global Backbone BackboneOData4 */\n\nwindow.BackboneOData4 = window.BackboneOData4 || {};\n\n////////////////////////////////////////////////////////////////////////////////\n\nBackboneOData4.Model = Backbone.Model.extend({\n  attributeTypes: {},\n\n  set: function set(attrs, opts) {\n    if (typeof attrs === 'string') {\n      attrs = {};\n      attrs[arguments[0]] = arguments[1];\n      opts = arguments[2];\n    }\n\n    for (var k in this.attributeTypes) {\n      if (this.attributeTypes.hasOwnProperty(k) && this.attributeTypes[k] && attrs.hasOwnProperty(k) && attrs[k]) {\n\n        if (typeof this.attributeTypes[k] === 'string') {\n          if (_typeof(attrs[k]) !== this.attributeTypes) {\n            switch (this.attributeTypes) {\n              case 'boolean':\n                attrs[k] = new Boolean(attrs[k]).valueOf();\n                break;\n\n              case 'number':\n                attrs[k] = new Number(attrs[k]).valueOf();\n                break;\n\n              case 'string':\n                attrs[k] = new String(attrs[k]).valueOf();\n                break;\n            }\n          }\n        } else if (typeof this.attributeTypes[k] === 'function') {\n          if (!(attrs[k] instanceof this.attributeTypes[k])) {\n            attrs[k] = Array.isArray(attrs[k]) ? attrs[k] : [attrs[k]];\n            attrs[k] = new (Function.prototype.bind.apply(this.attributeTypes[k], [null].concat(_toConsumableArray(attrs[k]))))();\n          }\n        }\n      }\n    }\n\n    return Backbone.Model.prototype.set.call(this, attrs, opts);\n  },\n\n  toJSON: function toJSON() {\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var json = Backbone.Model.prototype.toJSON.call(this, opts);\n\n    if (opts.deep) {\n      for (var k in this.attributeTypes) {\n        if (this.attributeTypes.hasOwnProperty(k) && this.attributeTypes[k] && json.hasOwnProperty(k) && json[k] && typeof this.attributeTypes[k] === 'function' && typeof json[k] !== 'string') {\n          if (json[k] instanceof Backbone.Model || json[k] instanceof Backbone.Collection) {\n            json[k] = json[k].toJSON(opts);\n          } else if (json[k] instanceof Date) {\n            json[k] = json[k].toISOString();\n          } else if (json[k].toString) {\n            json[k] = json[k].toString();\n          }\n        }\n      }\n    }\n\n    return json;\n  }\n});\n\n////////////////////////////////////////////////////////////////////////////////\n\nBackboneOData4.Collection = Backbone.Collection.extend({\n  model: BackboneOData4.Model,\n\n  queryOptions: {},\n\n  initialize: function initialize(mods) {\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    this.queryOptions = opts.queryOptions || {};\n  },\n\n  fetch: function fetch() {\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    opts.data = $.extend({}, opts.data, this.queryOptions, { $count: true });\n    return Backbone.Collection.prototype.fetch.call(this, opts);\n  },\n\n  parse: function parse(resp) {\n    return Backbone.Collection.prototype.parse.call(this, resp.value);\n  }\n});\n\n////////////////////////////////////////////////////////////////////////////////\n\nBackboneOData4.View = Backbone.View.extend({});"]}